##############################################################################
### Create the development container
##############################################################################
FROM golang:1.11.0-alpine as builder

RUN apk add tzdata zip make git --no-cache

# Zip up timezone database
WORKDIR /usr/share/zoneinfo
RUN zip -r -q -0 /zoneinfo.zip .

RUN mkdir -p /go/src/github.com/spothero/<%=appName%>
WORKDIR /go/src/github.com/spothero/<%=appName%>

# Configure container version variables
ARG GIT_SHA="not-set"
ARG VERSION_MAJOR=test
ARG VERSION_MINOR=test
ARG VERSION_PATCH=test
ENV GIT_SHA $GIT_SHA
ENV VERSION_MAJOR $VERSION_MAJOR
ENV VERSION_MINOR $VERSION_MINOR
ENV VERSION_PATCH $VERSION_PATCH
ENV VERSION $VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH

# Install dep and dependencies
# TODO: GoModules
RUN go get -u github.com/golang/dep/cmd/dep
COPY Gopkg.toml /go/src/github.com/spothero/spotbot/Gopkg.toml
COPY Gopkg.lock /go/src/github.com/spothero/spotbot/Gopkg.lock
RUN dep ensure -v -vendor-only

# Copy necessary build files
COPY cmd/ /go/src/github.com/spothero/<%=appName%>/cmd
COPY pkg/ /go/src/github.com/spothero/<%=appName%>/pkg

# Build Server
RUN GOOS=linux CGO_ENABLED=0 go build -ldflags="-X main.version=${VERSION} -X main.gitSHA=${GIT_SHA} -s -w" cmd/cmd.go

##############################################################################
### Create the Production Image
##############################################################################
FROM scratch

# Copy timezone database and tell Go where to look for it
COPY --from=builder zoneinfo.zip /usr/local/go/lib/time/zoneinfo.zip

# Copy CA certs
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Copy in build artifacts from the previous build stages
COPY --from=builder /go/src/github.com/spothero/<%=appName%>/<%=appName%> <%=appName%>

# The command to execute when the container is run
CMD ["./<%=appName%>", "server"]
